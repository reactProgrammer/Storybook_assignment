{"numFailedTestSuites":3,"numFailedTests":0,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":3,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":0,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1620221543851,"success":false,"testResults":[{"assertionResults":[],"coverage":{},"endTime":1620221553289,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    This usually means that you are trying to import a file which Jest cannot parse, e.g. it's not plain JavaScript.\n\n    By default, if Jest sees a Babel config, it will use that to transform your files, ignoring \"node_modules\".\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/en/ecmascript-modules\u001b[24m for how to enable it.\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/en/configuration.html\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    E:\\Storybook-react\\taskbox\\src\\components\\storybook.test.js:1\n    ({\"Object.<anonymous>\":function(module,exports,require,__dirname,__filename,global,jest){import initStoryshots from '@storybook/addon-storyshots';\n                                                                                             ^^^^^^\n\n    SyntaxError: Cannot use import statement outside a module\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22mnode_modules/jest-runtime/build/index.js\u001b[2m:1350:14)\u001b[22m\n","name":"E:\\Storybook-react\\taskbox\\src\\components\\storybook.test.js","startTime":1620221553289,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1620221553289,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: E:\\Storybook-react\\taskbox\\src\\components\\Pages\\Uipages.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (11:21):\n\n    \u001b[0m \u001b[90m  9 |\u001b[39m it(\u001b[32m'render without crashing'\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\n    \u001b[0m \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m div\u001b[33m=\u001b[39mdocument\u001b[33m.\u001b[39mcreateElement(\u001b[32m'div'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m     \u001b[33mReactDOM\u001b[39m\u001b[33m.\u001b[39mrender(\u001b[33m<\u001b[39m\u001b[33mLogin_page\u001b[39m formdata\u001b[33m=\u001b[39m{\u001b[33mLogin_page\u001b[39m\u001b[33m.\u001b[39margs}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[33m,\u001b[39mdiv)\u001b[0m\n    \u001b[0m \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 12 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 13 |\u001b[39m \u001b[90m/*\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 14 |\u001b[39m \u001b[90mit('render login page correcetly',()=>{\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:134:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:129:17)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:191:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1208:18)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:615:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:595:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:562:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:366:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:331:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:286:21)\u001b[22m\n","name":"E:\\Storybook-react\\taskbox\\src\\components\\Pages\\Uipages.test.js","startTime":1620221553289,"status":"failed","summary":""},{"assertionResults":[],"coverage":{},"endTime":1620221553289,"message":"  \u001b[1m● \u001b[22mTest suite failed to run\n\n    SyntaxError: E:\\Storybook-react\\taskbox\\src\\components\\Button\\Button.test.js: Support for the experimental syntax 'jsx' isn't currently enabled (5:12):\n\n    \u001b[0m \u001b[90m 3 |\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 4 |\u001b[39m test(\u001b[32m'Should render primary button'\u001b[39m\u001b[33m,\u001b[39m()\u001b[33m=>\u001b[39m{\u001b[0m\n    \u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 5 |\u001b[39m     render(\u001b[33m<\u001b[39m\u001b[33mPrimary\u001b[39m {\u001b[33m...\u001b[39m\u001b[33mPrimary\u001b[39m\u001b[33m.\u001b[39margs}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m   |\u001b[39m            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 6 |\u001b[39m     expect(screen\u001b[33m.\u001b[39mgetByRole(\u001b[32m'button'\u001b[39m))\u001b[33m.\u001b[39mtoHaveTextContent(\u001b[35m/Button/i\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 7 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n    \u001b[0m \u001b[90m 8 |\u001b[39m\u001b[0m\n\n    Add @babel/preset-react (https://git.io/JfeDR) to the 'presets' section of your Babel config to enable transformation.\n    If you want to leave it as-is, add @babel/plugin-syntax-jsx (https://git.io/vb4yA) to the 'plugins' section to enable parsing.\n\n      \u001b[2mat Parser._raise (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:134:45)\u001b[22m\n      \u001b[2mat Parser.raiseWithData (\u001b[22mnode_modules/@babel/parser/src/parser/error.js\u001b[2m:129:17)\u001b[22m\n      \u001b[2mat Parser.expectOnePlugin (\u001b[22mnode_modules/@babel/parser/src/parser/util.js\u001b[2m:191:18)\u001b[22m\n      \u001b[2mat Parser.parseExprAtom (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:1208:18)\u001b[22m\n      \u001b[2mat Parser.parseExprSubscripts (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:615:23)\u001b[22m\n      \u001b[2mat Parser.parseUpdate (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:595:21)\u001b[22m\n      \u001b[2mat Parser.parseMaybeUnary (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:562:23)\u001b[22m\n      \u001b[2mat Parser.parseExprOps (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:366:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeConditional (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:331:23)\u001b[22m\n      \u001b[2mat Parser.parseMaybeAssign (\u001b[22mnode_modules/@babel/parser/src/parser/expression.js\u001b[2m:286:21)\u001b[22m\n","name":"E:\\Storybook-react\\taskbox\\src\\components\\Button\\Button.test.js","startTime":1620221553289,"status":"failed","summary":""}],"wasInterrupted":false}